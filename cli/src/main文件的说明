首先main文件是webpack的入口文件，在我们知道的引入了我们需要的Vue和router文件里的所有其实就是index配置所有路由的信息都在里面，还有一个主页面的app.Vue文件里面是主文件，还有链接页面的信息这几个文件作用：首先Vue文件是来初始化Vue对象的把app。Vue里面的template里面的div元素给我们挂载上去然后才可以进行渲染，再次APP。Vue是为了我们能够显示出所有的涉及链接的所有组件，一个组件引发出的其他组件，但是必须需要其他组件的配置信息，所以引入了router文件里面的index.js包含了所有的组件信息也是通过import导入进来的
所以说webpack的入口文件指定入口文件后，webpack将自动识别项
目所依赖的其它文件，不过需要注意的是如果你的webpack不是全局安装的，那么当你在终端中使用此命令时，需要额外指定其在node_modules中的地址，继续上面的例子，在终端中输入如下命令。因为入口文件也会依赖一些文件所以只要有依赖就用import导入在自己的文件中，层层依赖的关系最后webpack利用入口文件一层一层的找到然后使用。但是因为index.js并没有使用引入到index.html文件里面是自动生成的因为我们的webpack.prod.conf.js文件中的HtmlWebpackPlugin会自动把入口文件中的js都自动放里面所以就把这二者进行关联，这就是webpack插件的






我们所说的require和exports是我们所说的commonJS标准这个是没有兼容性的而ES6中实现的是有兼容性的（叫ES6的module）所以ES6中的import和export转化成es5以后的写法就是require和export，二者实现的都是异步加载的方式核心都是模块化思想，因为但二者还是有不同模块模式require是node里面的模块标准，import等是es6里面的模块
import和export是ES6中的

